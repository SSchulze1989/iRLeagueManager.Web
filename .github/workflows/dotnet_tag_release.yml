name: .NET

on:
  push:
    tags: 
      - "*.*.*"

jobs:
  build:
    name: Build & Test
    env:
      BUILD_CONFIG: Release
      NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    runs-on: ubuntu-latest
    continue-on-error: false

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET 8
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
        source-url: https://api.nuget.org/v3/index.json
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build -c $BUILD_CONFIG --no-restore -p:TreatWarningsAsErrors=true
    - name: Test
      run: dotnet test -c $BUILD_CONFIG --no-build --verbosity normal

  push-to-dockerhub:
    name: Push image to dockerhub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ vars.REGISTRY }}/${{ vars.IMAGE_NAME }}

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: ${{ vars.REGISTRY }}/${{ vars.IMAGE_NAME }}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true
