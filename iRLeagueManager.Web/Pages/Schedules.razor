@page "/{LeagueName}/Schedules/Season/{SeasonId:long}"
@using iRLeagueManager.Web.ViewModels
@attribute [Authorize]
@inherits MvvmComponentBase
@inject LeagueApiService apiService
@inject SchedulesPageViewModel vm
@inject NavigationManager navigationManager

<h3>Schedules</h3>

@if (@Bind(vm, x => x.Loading))
{
    <p><em>Loading...</em></p>
}
else if (apiService.CurrentSeason == null)
{
    <p><em>No season selected</em></p>
}
else
{
    <div>
        @foreach(var schedule in @Bind(vm, x => x.Schedules))
        {
            <div class="container">
                <h3>@Bind(schedule, x => x.Name)</h3>
                @if (@Bind(schedule, x => x.Loading))
                {
                    <p><em>Loading...</em></p>
                }
                else 
                {
                    <table class="table alternate select-table">
                        <thead>
                            <tr>
                                <th>Nr.</th>
                                <th>Date</th>
                                <th>Track</th>
                                <th>Laps</th>
                                <th>Start</th>
                                <th>Practice</th>
                                <th>Qualy</th>
                                <th>Race</th>
                            </tr>
                        </thead>
                        <tbody>
                        @foreach((var session, var index) in @Bind(schedule, x => x.Sessions).Select((x, i) => (x, i)))
                        {
                            var sessionId = session.SessionId;
                            <tr @onclick="e => OnTableRowClick(sessionId)">
                                <td>@(index + 1).</td>
                                <td>@Bind(session, x => x.Date).ToString(@"dd:MM:yyyy")</td>
                                <td>@Bind(session, x => x.TrackId)</td>
                                <td>@Bind(session, x => x.Laps)</td>
                                <td>@Bind(session, x => x.SessionStart)</td>
                                <td>@Bind(session, x => x.PracticeLength)</td>
                                <td>@Bind(session, x => x.QualyLength)</td>
                                <td>@Bind(session, x => x.RaceLength)</td>
                            </tr>
                        }
                        </tbody>
                    </table>
                }
            </div>
        }
    </div>
}

@code {
    [Parameter]
    public string LeagueName { get; set; } = string.Empty;
    [Parameter]
    public long SeasonId { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender == false) return;

        // set season state
        if (SeasonId != 0)
        {
            await apiService.SetCurrentSeasonAsync(LeagueName, SeasonId);
        }

        // load schedules data
        if (apiService.CurrentSeason == null)
        {
            return;
        }

        await vm.Load();
        // load sessions to display
        foreach(var schedule in vm.Schedules)
        {
            await schedule.LoadSessions();
        }
    }

    private void OnTableRowClick(long sessionId)
    {
        navigationManager.NavigateTo($"{LeagueName}/Results/Session/{sessionId}");
    }
}
