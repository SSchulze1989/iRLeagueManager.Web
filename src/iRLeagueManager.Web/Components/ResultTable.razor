@typeparam TRow
@attribute [CascadingTypeParameter(nameof(TRow))]

<MudSimpleTable Dense="true" Hover="true" Striped="true" Bordered="true">
    <thead>
        <tr>
            <CascadingValue Value=@SortState>
                @HeaderTemplate
            </CascadingValue>
        </tr>
    </thead>
    <tbody>
        @foreach(var rowData in GetOrderedData(Data, SortState))
        {
            <tr>
                @RowTemplate(rowData)
            </tr>
        }
    </tbody>
</MudSimpleTable>

@code {
    private static IEnumerable<TRow> GetOrderedData(IEnumerable<TRow> data, SortState<TRow> sortState)
    {
        if (sortState.SortFunc is null)
        {
            return data;
        }

        return sortState.Direction switch
        {
            ViewModels.SortDirection.Ascending => data.OrderBy(sortState.SortFunc),
            ViewModels.SortDirection.Descending => data.OrderByDescending(sortState.SortFunc),
            _ => data
        };
    }
}
