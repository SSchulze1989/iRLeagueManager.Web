@namespace iRLeagueManager.Web.Components
@using iRLeagueApiCore.Common.Enums
@using iRLeagueApiCore.Common.Models.Reviews
@inherits EditDialogBase<VoteCategoryViewModel, VoteCategoryModel>

<MudDialog>
    <DialogContent>
        <EditForm Model="Vm" OnValidSubmit=Submit>
            <StatusResultValidator @ref=ResultValidator />
            <MudStack Spacing="2">
                <MudTextField @bind-Value="Vm.Text"
                                Label="Name"
                                For="() => Vm.Text"
                                Variant="Variant.Outlined" />
                <MudSelect Label="Type" @bind-Value="Vm.Type" Variant="Variant.Outlined">
                    @foreach (var penaltyType in Enum.GetValues<PenaltyType>())
                    {
                        <MudSelectItem Value="@penaltyType" />
                    }
                </MudSelect>
                @switch (Vm.DefaultPenalty.Type)
                {
                    case PenaltyType.Points:
                        <MudNumericField Label="Points" @bind-Value="Vm.Points" Variant="Variant.Outlined" />
                        break;
                    case PenaltyType.Position:
                        <MudNumericField Label="Positions" @bind-Value="Vm.Positions" Variant="Variant.Outlined" />
                        break;
                    case PenaltyType.Time:
                        <MudNumericField Label="Time" @bind-Value="Vm.TimeSeconds" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentText="seconds" />
                        break;
                }
            </MudStack>
            <FormValidationMessage TValue=string Message=@ResultValidator?.ErrorMessage />
        </EditForm>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Secondary" OnClick="Cancel">Cancel</MudButton>
        <ProgressButton Color="Color.Primary" OnClick="Submit" Loading="Vm.Loading" Indeterminate="true">Save</ProgressButton>
    </DialogActions>
</MudDialog>

@code {
    private string GetPointLabel(int defaultPenalty) => defaultPenalty switch
    {
        > 0 => "Bonus",
        < 0 => "Penalty",
        _ => "Penalty/Bonus",
    };
}
