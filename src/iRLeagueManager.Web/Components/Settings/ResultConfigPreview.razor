@using iRLeagueManager.Web.ViewModels

<div @attributes=AdditionalAttributes>
    <div>
        <h5>@ResultConfig.Name</h5>
        @if (ResultConfig.SourceResultConfig is not null)
        {
            <small><i>From source => @GetReferencedResultConfigName(ResultConfig)</i></small>
        }
    </div>

    <div class="collapse mt-2" id="config_@(ResultConfig.ResultConfigId)_details">
        @foreach (var scoring in ResultConfig.Scorings)
        {
            <div class="mb-3">
                <h6>@scoring.Name</h6>
                <div class="ms-5">
                    <PointTable PointRule=scoring.PointRule />
                    <small>Sort results by: @string.Join(" then ", scoring.PointRule.FinalSortOptions)</small>
                </div>
            </div>
        }
    </div>
</div>


@code {
    [Parameter(CaptureUnmatchedValues=true)]
    public IDictionary<string, object>? AdditionalAttributes { get; set; }

    [Parameter, EditorRequired]
    public ResultConfigViewModel ResultConfig { get; set; } = default!;

    [Parameter]
    public bool Collapsed { get; set; } = false;

    protected override void OnParametersSet()
    {
        _ = ResultConfig ?? throw BlazorParameterNullException.New(this, ResultConfig);
    }

    private string GetReferencedResultConfigName(ResultConfigViewModel config)
    {
        if (string.IsNullOrEmpty(config.ChampionshipName))
        {
            return config.Name;
        }
        return $"{config.ChampionshipName} - {config.Name}";
    }
}
