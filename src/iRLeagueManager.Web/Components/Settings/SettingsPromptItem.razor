@namespace iRLeagueManager.Web.Components
@inherits SettingsItem
@typeparam T
@typeparam TDialog where TDialog : PromptDialog<T>
@inject IDialogService DialogService

<SettingsItem Class="@Class"
              Style="@Style"
              Icon="@Icon"
              IconSize="IconSize"
              IconColor="IconColor"
              OnClick="OnClick"
              Disabled="Disabled"
              Href="@Href"
              Delete="Delete"
              Scroll="Scroll"
              Text="@Text"
              Label="@Label"
              HelperText="@HelperText"
              ChildContent="ChildContent!"
              EndIcon="EndIcon" />

@code {
    [Parameter] public T Value { get; set; } = default!;
    [Parameter] public EventCallback<T> ValueChanged { get; set; }
    /// <summary>
    /// Additional parameters to be provided to the prompt dialog component
    /// </summary>
    [Parameter] public DialogParameters<TDialog>? Parameters { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (!OnClick.HasDelegate)
        {
            OnClick = new(this, ShowDialog);
        }
    }

    private async Task ShowDialog()
    {
        var parameters = new DialogParameters<TDialog>()
        {
            { x => x.Value, ModelHelper.CopyModel(Value) },
        };
        if (Parameters is not null)
        {
            foreach(var parameter in Parameters)
            {
                parameters.Add(parameter.Key, parameter.Value);
            }
        }
        var result = await (await DialogService.ShowAsync<TDialog>(Label, parameters)).Result;
        if (result is null || result.Canceled || result.Data is not T dialogValue)
        {
            return;
        }
        await ValueChanged.InvokeAsync(dialogValue);
    }
}
