@page "/"
@page "/Leagues"

@using iRLeagueApiCore.Client
@using iRLeagueApiCore.Client.Http
@using iRLeagueManager.Web.Components
@using iRLeagueManager.Web.ViewModels;
@inherits LeagueComponentBase
@inject LeaguesViewModel vm
@inject ILeagueApiClient apiClient

<PageTitle>
    Leagues
</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large">
    <LoadingHeader Loading=@Bind(vm, x => x.Loading)>
        <HeaderText>
            <MudText Typo="Typo.h5">Leagues</MudText>
        </HeaderText>
    </LoadingHeader>

    <MudPaper Elevation="1">
        <MudSimpleTable Dense="true" Hover="true">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var league in @Bind(vm, x => x.Leagues))
                {
                    <tr>
                        <td class="pa-0">
                            <MudLink Class="d-block ma-0 py-2 px-4" Href="@league.LeagueName" tabindex="-1">
                                @Bind(league, x => x.LeagueId)
                            </MudLink>
                        </td>
                        <td class="pa-0">
                            <MudLink Class="d-block ma-0 py-2 px-4" Href="@league.LeagueName">
                                <DisplayLeague League=league.GetModel() />
                            </MudLink>
                        </td>
                    </tr>
                }
            </tbody>
        </MudSimpleTable>
    </MudPaper>
    <MudButton StartIcon="@Icons.Material.Filled.Add" Href="/createleague" FullWidth="true">Create League</MudButton>
</MudContainer>

@code {
    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        return vm.OnAfterRenderAsync(firstRender);
    }
}
