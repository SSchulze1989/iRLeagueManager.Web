@page "/{LeagueName}/Schedules/Season/{SeasonId:long}"
@using System.Text.Json
@using iRLeagueApiCore.Common.Enums
@using iRLeagueApiCore.Common.Models
@using iRLeagueManager.Web.ViewModels
@using iRLeagueManager.Web.Components
@attribute [Authorize]
@inherits LeagueComponentBase
@inject SchedulesPageViewModel vm
@inject JsonSerializerOptions jsonOptions

<LoadingHeader Loading=@Bind(vm, x => x.Loading)>
    <h3>Schedules</h3>
</LoadingHeader>

<AuthorizeView Roles=@(GetRoleString(LeagueRoles.Admin, LeagueRoles.Organizer))>
    <Authorized>
        <div>
            @foreach(var schedule in @Bind(vm, x => x.Schedules))
            {
                <DisplaySchedule class="container-md px-0 mb-2 mx-0" Schedule=schedule/>
            }
        </div>
    </Authorized>
    <NotAuthorized>
        <AuthorizeView Roles=@(GetRoleString(LeagueRoles.Member)) Context=context2>
            <Authorized>
                <div>
                    @foreach(var schedule in @Bind(vm, x => x.Schedules))
                    {
                        <DisplaySchedule class="container-md px-0 mb-2 mx-0" Schedule=schedule ReadOnly=true/>
                    }
                </div>
            </Authorized>
            <NotAuthorized>
                You are not allowed here!
            </NotAuthorized>
        </AuthorizeView>
    </NotAuthorized>
</AuthorizeView>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender == false) return;
        await LoadSchedules();
    }

    private async Task LoadSchedules()
    {
        await vm.Load();
    }
}
