@using System.ComponentModel
@inherits LayoutComponentBase
@inject SharedStateService Shared
@inject BreadCrumbService BreadCrumbService
@layout SettingsLayout
@implements IDisposable

<MudBreadcrumbs Items="BreadCrumbService.Items" />
<LoadingHeader Loading="Shared.Loading">
    <HeaderText>
        <MudText Typo="Typo.h5">
            @if (string.IsNullOrEmpty(BreadCrumbService.Items.LastOrDefault()?.Text) == false)
            {
                @BreadCrumbService.Items.Last().Text
            }
            else
            {
                @:Result Settings
            }
        </MudText>
    </HeaderText>
</LoadingHeader>
@Body

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();
        Shared.PropertyChanged += OnSharedPropertyChanged;
        BreadCrumbService.ItemsChanged += OnBreadCrumbsChanged;
    }

    private void OnSharedPropertyChanged(object? sender, PropertyChangedEventArgs e)
    {
        InvokeAsync(StateHasChanged);
    }

    private void OnBreadCrumbsChanged(object? sender, EventArgs e)
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        Shared.PropertyChanged -= OnSharedPropertyChanged;
        BreadCrumbService.ItemsChanged -= OnBreadCrumbsChanged;
    }
}
