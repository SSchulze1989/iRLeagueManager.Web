@using System.Security.Claims;
@inherits UtilityComponentBase

<MudAppBar Elevation="0">
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
                   OnClick="@((e) => DrawerToggle())" />
    <MudSpacer />
    <MudText Typo="Typo.h4"><DisplayLeague League="Shared.LeagueInfo" /></MudText>
    <MudSpacer />
    <AuthorizeView>
        <Authorized Context="auth">
            <MudMenu AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight">
                <ActivatorContent>
                    <MudAvatar Color="Color.Secondary" Variant="Variant.Filled">@GetUserInitials(auth.User, "??")</MudAvatar>
                </ActivatorContent>
                <ChildContent>
                    <MudMenuItem Disabled="true">User: @GetFullUserName(auth.User)</MudMenuItem>
                    <MudMenuItem Href="@($"members/{auth.User.GetUserId()}/profile")">My Profile</MudMenuItem>
                    <MudMenuItem Href="@($"members/logout?returnUrl={GetReturnUrl()}")">Logout</MudMenuItem>
                </ChildContent>
            </MudMenu>
        </Authorized>
        <NotAuthorized>
            <MudMenu Icon="@Icons.Material.Filled.Person" Color="Color.Inherit" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight">
                <MudMenuItem Href="members/register">Sign Up</MudMenuItem>
                <MudMenuItem Href="@($"members/login?returnUrl={GetReturnUrl()}")">Login</MudMenuItem>
            </MudMenu>
        </NotAuthorized>
    </AuthorizeView>
    <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit"
                   Href="https://github.com/SSchulze1989/iRLeaguemanager.web" Target="_blank" />
</MudAppBar>
<MudDrawer @bind-Open="_drawerOpen" Elevation="1" Breakpoint="Breakpoint.Lg" ClipMode="DrawerClipMode.Always">
    <MudDrawerHeader>
        <MudLink Href="/" Color="Color.Default" Typo="Typo.h6" Underline="Underline.None">
            iRLeagueManager
        </MudLink>
    </MudDrawerHeader>
    <NavMenu />
</MudDrawer>

@code
    {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private string GetFullUserName(ClaimsPrincipal user)
    {
        if (user.Identity?.IsAuthenticated != true || user.Identity?.Name is null)
        {
            return string.Empty;
        }

        return user.Identity.Name;
    }

    private string GetUserInitials(ClaimsPrincipal? user, string fallback)
    {
        if (user?.Identity?.Name is null)
        {
            return fallback;
        }
            
        return user.Identity.Name.Substring(0, 2);
    }
}