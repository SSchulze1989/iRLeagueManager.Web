@inherits LayoutComponentBase
@inject NavigationManager NavigationManager

<PageTitle>iRLeagueManager.Web</PageTitle>

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
                       OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        <MudIconButton Icon="@Icons.Custom.Brands.MudBlazor" Color="Color.Inherit" Href="https://mudblazor.com/"
                       Target="_blank" />
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit"
                       Href="https://github.com/MudBlazor/MudBlazor/" Target="_blank" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">MudBlazor.Template</MudText>
        </MudDrawerHeader>
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
            @Body
        </MudContainer>
    </MudMainContent>
    <div class="page-footer">
        <Footer />
    </div>
</MudLayout>

<BlazoredToasts 
    Timeout=100
    Position=Blazored.Toast.Configuration.ToastPosition.BottomRight
    WarningClass="alert alert-warning"/>

@code {
    [CascadingParameter]
    public RouteData? RouteData { get; set; }

    private ErrorBoundary? ErrorBoundary { get; set; }

    public string? LeagueName { get; set; }
    //public long? SeasonId { get; set; }
    //public long? EventId { get; set; }

    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected override void OnParametersSet()
    {
        LeagueName = (string?)RouteData?.RouteValues?.GetValueOrDefault("LeagueName");
        ErrorBoundary?.Recover();
    }

    private void Reload()
    {
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }
}
