@using System.Net
@using System.Security.Claims
@inject LeagueApiService apiService
@inject NavigationManager navigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">iRLeagueManager v@(VersionString)</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item">
            <NavLink class="nav-link" href="leagues">
                <span class="oi oi-list" aria-hidden="true"></span> Leagues
            </NavLink>
        </div>
        <AuthorizeView>
            <Authorized>
                <div class="nav-item @(seasonSelectDisabled)">
                    <select @bind="SeasonSelect" class="form-select no-radius" @onclick:stopPropagation>
                        @foreach (var season in SharedState.SeasonList)
                        {
                            <option value="@season.SeasonId" class="nav-option">@season.SeasonName</option>
                        }
                    </select>
                </div>
                <div class="nav-item @(navItemsDisabled)">
                    <NavLink class="nav-link" href="@($"./{SharedState.LeagueName}/Settings")">
                        <span class="oi oi-cog" aria-hidden="true"></span> Settings
                    </NavLink>
                </div>
                <div class="nav-item @(navItemsDisabled)">
                    <NavLink class="nav-link" href="@($"./{SharedState.LeagueName}/Schedules/Season/{SharedState.SeasonId}")">
                        <span class="oi oi-calendar" aria-hidden="true"></span> Schedules
                    </NavLink>
                </div>
                <div class="nav-item @(navItemsDisabled)">
                    <NavLink class="nav-link" href="@($"./{SharedState.LeagueName}/Results")">
                        <span class="oi oi-clipboard" aria-hidden="true"></span> Results
                    </NavLink>
                </div>
                <div class="nav-item @(navItemsDisabled)">
                    <NavLink class="nav-link" href="@($"./{SharedState.LeagueName}/Standings")">
                        <span class="oi oi-clipboard" aria-hidden="true"></span> Standings
                    </NavLink>
                </div>
                <div class="nav-item @(navItemsDisabled)">
                    <NavLink class="nav-link" href="@($"./{SharedState.LeagueName}/Reviews")">
                        <span class="oi oi-magnifying-glass" aria-hidden="true"></span> Reviews
                    </NavLink>
                </div>

                <div class="nav-item">
                    <a class="nav-link" href="@($"./member/logout?returnUrl={GetCurrentUrl()}")">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                    </a>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item @(seasonSelectDisabled)">
                    <select @bind="SeasonSelect" class="form-select no-radius px-0" @onclick:stopPropagation>
                        @foreach (var season in SharedState.SeasonList)
                        {
                            <option value="@season.SeasonId" class="nav-option">@season.SeasonName</option>
                        }
                    </select>
                </div>
                <div class="nav-item disabled">
                    <NavLink class="nav-link" href="@($"./{SharedState.LeagueName}/Settings")">
                        <span class="oi oi-cog" aria-hidden="true"></span> Settings
                    </NavLink>
                </div>
                <div class="nav-item @(navItemsDisabled)">
                    <NavLink class="nav-link" href="@($"./{SharedState.LeagueName}/Schedules/Season/{SharedState.SeasonId}")">
                        <span class="oi oi-calendar" aria-hidden="true"></span> Schedules
                    </NavLink>
                </div>
                <div class="nav-item @(navItemsDisabled)">
                    <NavLink class="nav-link" href="@($"./{SharedState.LeagueName}/Results")">
                        <span class="oi oi-clipboard" aria-hidden="true"></span> Results
                    </NavLink>
                </div>
                <div class="nav-item @(navItemsDisabled)">
                    <NavLink class="nav-link" href="@($"./{SharedState.LeagueName}/Standings")">
                        <span class="oi oi-clipboard" aria-hidden="true"></span> Standings
                    </NavLink>
                </div>
                <div class="nav-item @(navItemsDisabled)">
                    <NavLink class="nav-link" href="@($"./{SharedState.LeagueName}/Reviews")">
                        <span class="oi oi-magnifying-glass" aria-hidden="true"></span> Reviews
                    </NavLink>
                </div>
                <div class="nav-item">
                    <NavLink class="nav-link" href="@($"./member/login?returnUrl={GetReturnUrl()}")">
                        <span class="oi oi-account-login" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
    <AuthorizeView>
        <Authorized>
            <div class="container mb-3">
                User: @context.User.Identity?.Name;<br/>
                @{var userRoles = @context.User.Claims
                    .Where(x => x.Type == ClaimTypes.Role)
                    .Select(x => x.Value);}
                Roles: @string.Join(", ", userRoles)
            </div>
        </Authorized>
    </AuthorizeView>
    <div class="container" style="position: fixed; bottom: 0;">
        <small>TimeZone: UTC + @SharedState.LocalTimeZone.BaseUtcOffset.AsDateTime().ToString(@"hh\:mm")</small>
    </div>
</div>

@code {
    [CascadingParameter]
    public SharedStateService SharedState { get; set; } = default!;
    [CascadingParameter]
    public RouteData? RouteData { get; set; }

    private static string VersionString { get; } = $"{System.Reflection.Assembly.GetEntryAssembly()!.GetName().Version!.Major}.{System.Reflection.Assembly.GetEntryAssembly()!.GetName().Version!.Minor}.{System.Reflection.Assembly.GetEntryAssembly()!.GetName().Version!.Build}";

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : "nav-menu";

    private bool leagueSelected => string.IsNullOrEmpty(SharedState.LeagueName) == false;
    private bool seasonSelected => leagueSelected && string.IsNullOrEmpty(SharedState.SeasonName) == false && SharedState.SeasonId != 0;
    private string seasonSelectDisabled => leagueSelected == false ? "disabled" : "";
    private string navItemsDisabled => seasonSelected == false ? "disabled": "";

    private long SeasonSelect
    {
        get => SharedState.SeasonId;
        set => OnSeasonSelectChanged(value);
    }

    protected override void OnInitialized()
    {
        SharedState.StateChanged += (sender, e) => InvokeAsync(StateHasChanged);

    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void OnSeasonSelectChanged(long value)
    {
        navigationManager.NavigateTo($"./{SharedState.LeagueName}/Seasons/{value}");
        InvokeAsync(StateHasChanged);
    }

    private string GetCurrentUrl()
    {
        return WebUtility.UrlEncode(new Uri(navigationManager.Uri).PathAndQuery);
    }

    private string GetReturnUrl()
    {
        var returnUrl = navigationManager.QueryParameter<string>("returnUrl");
        if (string.IsNullOrEmpty(returnUrl))
        {
            return GetCurrentUrl();
        }
        return WebUtility.UrlEncode(returnUrl);
    }
}
